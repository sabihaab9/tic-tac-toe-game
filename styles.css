/* set up basic box sizing for EVERYTHING*/
*,*::after, *::before{
    box-sizing: border-box;
}

/* use root to declare global CSS variables, cell-size, mark-size */
/* :root represents the <html> element */
:root{
    --cell-size: 100px;
    --mark-size: calc(var(--cell-size)*.9)
}

/* get rid of all margins so it will be easier
to add the black background*/
body{
    margin: 0;
}

/*----- Part 1: creating a grid ------*/

.board{
/* board fills entire screen */
    width: 100vw;
    height: 100vh;
    /* to center board */
    display: grid;
    justify-content: center;
    justify-items: center;
    align-items: center;
    align-content: center;
    grid-template-columns: repeat(3,auto);
}

.cell{
    width: var(--cell-size);
    height: var(--cell-size);
    /* background-color: black; */
    border: 1px solid black;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
}

/* remove grid from the top (the first 3 elements) */
.cell:first-child, 
.cell:nth-child(2), 
.cell:nth-child(3){
    border-top: none;
}

/*remove grid from left side */
.cell:nth-child(3n+1){
    border-left: none;
}

/* remove grid from right side */
.cell:nth-child(3n+3){
    border-right: none;
}

/* remove grid from the bottom (the last 3 elements) */
.cell:last-child, 
.cell:nth-child(8), 
.cell:nth-child(7){
    border-bottom: none;
}


/* ----Part 2: creating the X and O markers ------*/

/* not-allowed symbol when cell already has an X or O */
.cell.x, .cell.circle{
    cursor: not-allowed;
    
}

/*----- Part 3: add hover effects to our cells using .board ...-----*/

/* select our board when it has the X class applied to it */
/*:hover is a CSS selector */

/* .board.x .cell:hover{

} */

.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after{
    background-color: lightgrey;
}

.cell.x::before,
.cell.x::after{
    background-color: black;
}
/* use CSS to create the X-shape for us*/

/*use pseudo-elements to make the 'X'  */

/*use :not() selector so that hover effect works only when it is NOT X or O*/
.cell.x::before,
.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::before, 
.board.x .cell:not(.x):not(.circle):hover::after{
  content: '';
  /* so cells can have the same base  */
  position: absolute;
  /* we want width to be 15% of our height */
  width: calc(var(--mark-size)*.15);
  height: var(--mark-size);
}

.cell.x::before, 
.board.x .cell:not(.x):not(.circle):hover::before{
    transform: rotate(45deg);
}

.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::after{
    transform:rotate(-45deg);
}


/* use CSS to create the O-shape for us*/
/*use pseudo-elements to make the 'O'  */

.cell.circle::before,
.cell.circle::after,
.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after{
    content: '';
    position: absolute;
    /* make it a circle */
    border-radius: 50%;
}

  /* make the before and after element two separate circles */


/* larger circle */

.cell.circle::before{
    background-color: black;
}
.cell.circle::before,
.board.x .cell:not(.x):not(.circle):hover::before{
    width: var(--mark-size);
    height: var(--mark-size);
    /* background-color: black; */
}

/* smaller circle */
.cell.circle::after,
.board.x .cell:not(.x):not(.circle):hover::after{
    width: calc(var(--mark-size)* .7);
    height: calc(var(--mark-size)* .7);
    background-color: white;
}

